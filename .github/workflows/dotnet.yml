name: team-minions-webapp

on:
  push:
    branches: [ master, feature/* ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Test
      run: dotnet test --no-build --verbosity normal ${{ github.workspace }}/AnimalAdoption.Web.Portal.UnitTests/AnimalAdoption.Web.Portal.UnitTests.csproj

    - name: Publish
      run: dotnet publish --no-build --verbosity normal ${{ github.workspace }}/AnimalAdoption.Web.Portal/AnimalAdoption.Web.Portal.csproj --output ${{ github.workspace }}/artifact/webapp
  
    - name: Upload a WebApp Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        name: webapp
        path: ${{ github.workspace }}/artifact/webapp
        if-no-files-found: error

    - name: Upload a Bicep Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        name: bicep
        path: ${{ github.workspace }}/infrastructure/
        if-no-files-found: error

    - name: Notification for build failure
      uses: jdcargile/ms-teams-notification@v1.3
      if: failure()
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        notification-summary: BUILD FAILED
        notification-color: 'dc3545 '

    - name: Notification for build success
      uses: jdcargile/ms-teams-notification@v1.3
      if: success()
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        notification-summary: BUILD SUCCEEDED
        notification-color: '28a745'
    
  deploy_to_dev:
    runs-on: ubuntu-latest
    needs: build
    environment: 'dev-webapp'
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3.0.0
      with:
        name: webapp
        path: ${{ github.workspace }}/artifact/webapp
        
    - name: Azure Login
      uses: Azure/login@v1.4.3
      with:
        creds: ${{ secrets.DEV_RG_SP }}
        environment: azurecloud
      
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: web-taa-dev-sea
        package: ${{ github.workspace }}/artifact/webapp

    - name: Set Web App Application Settings
      uses: Azure/appservice-settings@v1
      with:
        app-name: web-taa-dev-sea
        app-settings-json: |
          [
            {
              "name": "GlobalPassword",
              "value": "@Microsoft.KeyVault(VaultName=kv-taa-dev-sea;SecretName=GlobalPassword)",
              "slotSetting": false
            },
            {
              "name": "SimulatedFailureChance",
              "value": "@Microsoft.KeyVault(VaultName=kv-taa-dev-sea;SecretName=SimulatedFailureChance)",
              "slotSetting": false
            }
          ]


  deploy_infra_to_prod:
    env: 
      TENANT_ID: "ab5eb3d0-6067-40ee-b4c0-a2ce05dbf039"
      RGSP_OBJECTID: "20e6d507-69dd-4d56-b228-f1fb9175eff3"
      
    runs-on: ubuntu-latest
    needs: deploy_to_dev
    environment: 'prod-webapp'
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Download a Bicep Build Artifact
      uses: actions/download-artifact@v3.0.0
      with:
        name: bicep
        path: ${{ github.workspace }}
        
    - name: Azure Login
      uses: Azure/login@v1.4.3
      with:
        creds: ${{ secrets.PROD_RG_SP }}
        environment: azurecloud
    
    - name: Deploy Azure Resource Manager (ARM) Template
      uses: Azure/arm-deploy@v1
      with:
        resourceGroupName: 'DevOpsGitHub-2022-03-14-team-02-prod'
        template: ${{ github.workspace }}/deploy.bicep
        deploymentMode: incremental
        parameters: tenantGuid="$TENANT_ID" appServicePlanName="asp-taa-prod-sea" keyVaultName="kv-taa-prod-sea" webAppName="web-taa-prod-sea" resourceGroupServicePrincipalManagedApplicationObjectId="$RGSP_OBJECTID"
          
  deploy_to_prod:
    runs-on: ubuntu-latest
    needs: deploy_infra_to_prod
    environment: 'prod-webapp'
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3.0.0
      with:
        name: webapp
        path: ${{ github.workspace }}/artifact/webapp
        
    - name: Azure Login
      uses: Azure/login@v1.4.3
      with:
        creds: ${{ secrets.PROD_RG_SP }}
        environment: azurecloud
      
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: web-taa-prod-sea
        package: ${{ github.workspace }}/artifact/webapp

    - name: Set Web App Application Settings
      uses: Azure/appservice-settings@v1
      with:
        app-name: web-taa-prod-sea
        app-settings-json: |
          [
            {
              "name": "GlobalPassword",
              "value": "@Microsoft.KeyVault(VaultName=kv-taa-prod-sea;SecretName=GlobalPassword)",
              "slotSetting": false
            },
            {
              "name": "SimulatedFailureChance",
              "value": "@Microsoft.KeyVault(VaultName=kv-taa-prod-sea;SecretName=SimulatedFailureChance)",
              "slotSetting": false
            }
          ]
